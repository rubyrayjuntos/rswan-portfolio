<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>R. Swan Portfolio</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="styles/main.css">
    <link rel="stylesheet" href="styles/themes.css">
    <style>
        /* Base Styles */
        :root {
            --font-family-main: 'Segoe UI', 'Roboto', 'Helvetica Neue', sans-serif;
            --font-family-headings: 'Georgia', 'Times New Roman', serif;
            --base-font-size: 16px;
            --text-color: #333;
            --bg-color: #f4f4f9;
            --accent-color: #6a5acd; /* Lavender */
            --accent-color-dark: #483d8b;
            --border-radius: 8px;
            --shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        body {
            font-family: var(--font-family-main);
            background-color: var(--bg-color);
            color: var(--text-color);
            margin: 0;
            font-size: var(--base-font-size);
            line-height: 1.6;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        /* Layout */
        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px 0;
        }
        .top-nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 5%;
            background-color: #fff;
            box-shadow: var(--shadow);
        }
        .logo {
            font-family: var(--font-family-headings);
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--accent-color);
        }
        .nav-links {
            display: flex;
            gap: 20px;
        }
        .nav-button {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1rem;
            color: var(--text-color);
            padding: 10px;
            border-radius: var(--border-radius);
            transition: background-color 0.3s, color 0.3s;
        }
        .nav-button:hover, .nav-button.active {
            background-color: var(--accent-color-dark);
            color: #fff;
        }
        .filter-panel {
            padding: 20px 5%;
            background-color: #e9e6f3;
            border-bottom: 1px solid #dcdcdc;
            display: flex;
            align-items: center;
            gap: 20px;
        }
        #mainSearchInput {
            flex-grow: 1;
            padding: 12px;
            border-radius: var(--border-radius);
            border: 1px solid #ccc;
            font-size: 1rem;
        }
        .filter-buttons button {
             background-color: #fff;
             border: 1px solid #ccc;
             padding: 10px 15px;
             border-radius: var(--border-radius);
             cursor: pointer;
             transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }
       .filter-buttons button:hover, .filter-buttons button.active {
            background-color: var(--accent-color);
            color: white;
            border-color: var(--accent-color);
        }
        #projectGrid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 30px;
            padding: 40px 0;
        }

        /* Project Card */
        .project-card {
            background: #fff;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
            display: flex;
            flex-direction: column;
            transition: transform 0.3s, box-shadow 0.3s;
        }
        .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0,0,0,0.15);
        }
        .card-hero {
            height: 200px;
            position: relative;
        }
        .card-hero-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .card-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: var(--accent-color);
            color: white;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 0.8rem;
            font-weight: bold;
            text-transform: capitalize;
        }
        .card-content {
            padding: 20px;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
        }
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: baseline;
            margin-bottom: 10px;
        }
        .card-title {
            font-family: var(--font-family-headings);
            font-size: 1.2rem;
            margin: 0;
        }
        .card-year {
            font-size: 0.9rem;
            color: #777;
        }
        .card-description {
            font-size: 0.95rem;
            line-height: 1.5;
            flex-grow: 1;
            margin-bottom: 15px;
        }
        .card-info {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            border-top: 1px solid #eee;
            padding-top: 15px;
        }
        .card-tag {
            background-color: #f0f0f0;
            color: #555;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 0.8rem;
        }
        .tag-label {
            font-weight: bold;
            margin-right: 5px;
            color: var(--accent-color);
        }

        /* Modal */
        .modal-overlay {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.6);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        .modal-overlay.is-visible {
            display: flex; /* Show when active */
        }
        .modal-content {
            background: #fff;
            padding: 30px;
            border-radius: var(--border-radius);
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            width: 90%;
            max-width: 600px;
            position: relative;
        }
        .modal-close-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
        }
        .tabs {
            display: flex;
            border-bottom: 1px solid #ccc;
            margin-bottom: 20px;
        }
        .tab-button {
            padding: 10px 20px;
            cursor: pointer;
            border: none;
            background: none;
            font-size: 1rem;
            border-bottom: 3px solid transparent;
        }
        .tab-button.active {
            border-bottom: 3px solid var(--accent-color);
            font-weight: bold;
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
        }
        .form-group input, .form-group textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: var(--border-radius);
        }
        .form-submit-btn {
            background-color: var(--accent-color);
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s;
        }
        .form-submit-btn:hover {
            background-color: var(--accent-color-dark);
        }
        
        /* Footer */
        .signature-footer {
            text-align: center;
            padding: 40px 20px;
            background-color: #333;
            color: #eee;
        }
        .footer-logo {
            font-family: var(--font-family-headings);
            font-size: 2rem;
            color: var(--accent-color);
            margin-bottom: 10px;
        }
        .footer-quote {
            font-style: italic;
            margin-bottom: 20px;
        }
        .footer-cta-button {
            background-color: var(--accent-color);
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: var(--border-radius);
            text-decoration: none;
            font-size: 1rem;
            transition: background-color 0.3s;
        }
        .footer-cta-button:hover {
            background-color: var(--accent-color-dark);
        }
        .footer-copyright {
            margin-top: 30px;
            font-size: 0.9rem;
            opacity: 0.7;
        }
    </style>
</head>

<body>

    <header class="top-nav">
        <div class="logo">R. Swan</div>
        <nav class="nav-links">
            <button class="nav-button" id="connectBtn">Connect</button>
        </nav>
    </header>

    <div class="filter-panel">
        <input type="search" id="mainSearchInput" placeholder="Search projects by title, description, or tech...">
        <div class="filter-buttons" id="filterButtons">
             <button data-filter="all" class="active">All</button>
             <button data-filter="code">Systems</button>
             <button data-filter="writing">Words</button>
             <button data-filter="art">Visions</button>
        </div>
    </div>

    <main class="container">
        <div id="projectGrid"></div>
    </main>
    
    <footer class="signature-footer">
        <div class="footer-logo">R.S.</div>
        <p class="footer-quote">"Crafting worlds, one pixel and one word at a time."</p>
        <a href="mailto:email@example.com" class="footer-cta-button">Start a Conversation</a>
        <p class="footer-copyright" id="copyright"></p>
    </footer>

    <!-- Unified Connect Modal -->
    <div id="connectModal" class.modal-overlay">
        <div class="modal-content">
            <button class="modal-close-btn" data-modal-id="connectModal">&times;</button>
            <div class="tabs">
                <button class="tab-button active" data-tab="about">About Me</button>
                <button class="tab-button" data-tab="contact">Contact</button>
            </div>
            <div id="about" class="tab-content active">
                <h3>About R. Swan</h3>
                <p>I am a multidisciplinary creator with a passion for storytelling, world-building, and immersive digital experiences. My work spans across writing, art, and code, always with a focus on crafting narratives that resonate and inspire.</p>
                <p>This portfolio is a living testament to that journey, a collection of visions, words, and systems that explore the intersection of technology and creativity.</p>
            </div>
            <div id="contact" class="tab-content">
                <h3>Get in Touch</h3>
                <form id="contactForm">
                    <div class="form-group">
                        <label for="name">Name</label>
                        <input type="text" id="name" name="name" required>
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-group">
                        <label for="message">Message</label>
                        <textarea id="message" name="message" rows="4" required></textarea>
                    </div>
                    <button type="submit" class="form-submit-btn">Send Message</button>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/fuse.js@6.6.2"></script>
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        let projects = [];
        let fuse;

        const projectGrid = document.getElementById('projectGrid');
        const mainSearchInput = document.getElementById('mainSearchInput');
        const filterButtons = document.getElementById('filterButtons');
        
        // --- Data Loading ---
        async function loadProjects() {
            try {
                // Using a cache-busting parameter to ensure fresh data
                const response = await fetch('_data/projects.json?v=' + new Date().getTime());
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                projects = await response.json();
                initializeSearch(projects);
                renderProjects(projects);
            } catch (error) {
                console.error("Failed to load projects:", error);
                projectGrid.innerHTML = "<p>Error loading projects. Please try again later.</p>";
            }
        }

        // --- Search Initialization ---
        function initializeSearch(projectsData) {
            const options = {
                includeScore: true,
                threshold: 0.4,
                keys: [
                    { name: 'title', weight: 0.7 },
                    { name: 'description', weight: 0.5 },
                    { name: 'pitch', weight: 0.5 },
                    { name: 'tech', weight: 0.4 },
                    { name: 'genre', weight: 0.4 },
                    { name: 'role', weight: 0.3 },
                    { name: 'style', weight: 0.3 },
                ]
            };
            fuse = new Fuse(projectsData, options);
        }

        // --- Rendering ---
        function renderProjects(projectsToRender) {
            projectGrid.innerHTML = '';
            if (projectsToRender.length === 0) {
                 projectGrid.innerHTML = "<p>No projects match your criteria.</p>";
                 return;
            }

            projectsToRender.forEach(project => {
                if (!project || !project.title) {
                    console.warn('Skipping invalid project data:', project);
                    return;
                }
                const card = document.createElement('div');
                card.className = 'project-card';
                card.dataset.id = project.id;
                
                // Simplified slug creation
                const projectSlug = project.title.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '');
                
                // Convention-based image path
                const heroImageUrl = `images/projects/${projectSlug}/card-hero.jpg`;

                // --- Tags ---
                const tagsHtml = `
                    <div class="card-tag">
                        <span class="tag-label">Genre:</span> ${project.genre ? project.genre.join(', ') : 'N/A'}
                    </div>
                    <div class="card-tag">
                        <span class="tag-label">Tech:</span> ${project.tech ? project.tech.join(', ') : 'N/A'}
                    </div>
                `;

                card.innerHTML = `
                    <div class="card-hero">
                        <img src="${heroImageUrl}" alt="Hero image for ${project.title}" class="card-hero-img" onerror="this.onerror=null;this.src='images/placeholder.jpg';">
                        <div class="card-badge">${project.medium}</div>
                    </div>
                    <div class="card-content">
                        <div class="card-header">
                            <h3 class="card-title">${project.title}</h3>
                            <span class="card-year">${project.year}</span>
                        </div>
                        <p class="card-description">${project.description}</p>
                        <div class="card-info">
                            ${tagsHtml}
                        </div>
                    </div>
                `;
                
                card.addEventListener('click', () => {
                    sessionStorage.setItem('currentProject', JSON.stringify(project));
                    window.location.href = 'ParallaxThemes.html';
                });

                projectGrid.appendChild(card);
            });
        }

        // --- Filtering and Searching ---
        function applyFilters() {
            let projectsToFilter = projects;
            const searchQuery = mainSearchInput.value.trim();
            
            if (searchQuery && fuse) {
                const searchResults = fuse.search(searchQuery);
                projectsToFilter = searchResults.map(result => result.item);
            }
            
            const activeFilter = filterButtons.querySelector('.active').dataset.filter;

            if (activeFilter !== 'all') {
                projectsToFilter = projectsToFilter.filter(p => p.medium.toLowerCase() === activeFilter);
            }
            
            renderProjects(projectsToFilter);
        }

        // --- Event Listeners ---
        mainSearchInput.addEventListener('input', applyFilters);

        filterButtons.addEventListener('click', (e) => {
            if (e.target.tagName === 'BUTTON') {
                filterButtons.querySelector('.active').classList.remove('active');
                e.target.classList.add('active');
                applyFilters();
            }
        });

        // --- Modals ---
        function setupModals() {
            const connectBtn = document.getElementById('connectBtn');
            const connectModal = document.getElementById('connectModal');
            
            // Open modal
            connectBtn.addEventListener('click', () => {
                connectModal.classList.add('is-visible');
            });

            // Close modal logic
            document.querySelectorAll('.modal-close-btn, .modal-overlay').forEach(el => {
                el.addEventListener('click', (e) => {
                    // if the event target is the element itself (and not a child)
                    if (e.target === el) {
                        const modalId = el.dataset.modalId || 'connectModal';
                        document.getElementById(modalId).classList.remove('is-visible');
                    }
                });
            });

            // Tab logic
            const tabs = connectModal.querySelector('.tabs');
            const tabContents = connectModal.querySelectorAll('.tab-content');
            tabs.addEventListener('click', (e) => {
                if (e.target.tagName === 'BUTTON') {
                    const targetTab = e.target.dataset.tab;
                    
                    tabs.querySelector('.active').classList.remove('active');
                    e.target.classList.add('active');

                    tabContents.forEach(content => {
                        content.classList.remove('active');
                        if (content.id === targetTab) {
                            content.classList.add('active');
                        }
                    });
                }
            });
        }

        // --- Footer ---
        function setupFooter() {
            const copyrightEl = document.getElementById('copyright');
            copyrightEl.textContent = `© ${new Date().getFullYear()} R. Swan. All Rights Reserved.`;
        }

        // --- Initialization ---
        loadProjects();
        setupModals();
        setupFooter();
    });
    </script>
</body>
</html>